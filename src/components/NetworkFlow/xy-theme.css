.react-flow {
    /* Custom Variables */
    --xy-theme-selected: hsl(var(--primary));
    --xy-theme-hover: hsl(var(--muted-foreground));
    --xy-theme-edge-hover: hsl(var(--foreground));
    --xy-theme-color-focus: hsl(var(--ring));

    /* Built-in Variables see https://reactflow.dev/learn/customization/theming */
    --xy-node-border-default: 1px solid hsl(var(--border));
  
    --xy-node-boxshadow-default: 
      0px 3.54px 4.55px 0px rgba(0, 0, 0, 0.02), 
      0px 3.54px 4.55px 0px rgba(0, 0, 0, 0.05), 
      0px 0.51px 1.01px 0px rgba(0, 0, 0, 0.1);
  
    --xy-node-border-radius-default: 8px;
  
    --xy-handle-background-color-default: hsl(var(--background));
    --xy-handle-border-color-default: hsl(var(--border));
  
    --xy-edge-label-color-default: hsl(var(--muted-foreground));
}

/* Customizing Default Theming */

.react-flow__node {
    box-shadow: var(--xy-node-boxshadow-default);
    border-radius: var(--xy-node-border-radius-default);
    background-color: hsl(var(--card));
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 10px;
    font-size: 12px;
    flex-direction: column;
    border: var(--xy-node-border-default);
    color: hsl(var(--card-foreground));
}

.react-flow__node.selectable:focus {
    box-shadow: 0px 0px 0px 2px var(--xy-theme-color-focus);
    border-color: hsl(var(--primary));
}

.react-flow__node.selectable:focus:active {
    box-shadow: var(--xy-node-boxshadow-default);
}

.react-flow__node.selectable:hover, 
.react-flow__node.draggable:hover {
    border-color: var(--xy-theme-hover);
}

.react-flow__node.selectable.selected {
    border-color: var(--xy-theme-selected);
    box-shadow: var(--xy-node-boxshadow-default);
}

.react-flow__node-group {
    background-color: hsl(var(--primary) / 0.1);
    border-color: hsl(var(--primary));
}

.react-flow__edge.selectable:hover .react-flow__edge-path,
.react-flow__edge.selectable.selected .react-flow__edge-path {
    stroke: var(--xy-theme-edge-hover);
}

.react-flow__handle {
    background-color: var(--xy-handle-background-color-default);
}

.react-flow__handle.connectionindicator:hover {
    pointer-events: all;
    border-color: var(--xy-theme-edge-hover);
    background-color: hsl(var(--background));
}

.react-flow__handle.connectionindicator:focus , 
.react-flow__handle.connectingfrom,
.react-flow__handle.connectingto {
    border-color: var(--xy-theme-edge-hover);
}

.react-flow__node-resizer {
    border-radius: 0;
    border: none;
}

.react-flow__resize-control.handle {
    background-color: hsl(var(--background));
    border-color: hsl(var(--primary));
    border-radius: 0;
    width: 5px;
    height: 5px;
}

/* Circle Node */
.react-flow__node-circle {
    border-radius: 50%;
    height: 100px;
    width: 100px;
    font-family: monospace;
    text-align: center;
}

/* Text Input Node */
.react-flow__node-textinput {
    width: 150px;
    font-family: monospace;
    text-align: left;
}

.text-input-node__input {
    width: 100%;
    box-sizing: border-box;
    margin: 5px 0px;
    border-radius: 3px;
    border: var(--xy-node-border-default);
    background: hsl(var(--background));
    color: hsl(var(--foreground));
    padding: 4px 8px;
}

.text-input-node__input::-webkit-outer-spin-button,
input[type='number']::-webkit-inner-spin-button {
    -webkit-appearance: none;
}

.text-input-node__input {
    -moz-appearance: textfield;
    appearance: textfield;
}

/* Annotation Node */
.react-flow__node-annotation {
    font-size: 16px;
    width: 200px;
    color: hsl(var(--primary));
    position: absolute;
    box-shadow: none;
    font-family: monospace;
    text-align: left;
    background-color: transparent;
    border: none;
}

.react-flow__node-annotation .annotation-content {
    padding: 10px;
    display: flex;
}

.react-flow__node-annotation .annotation-level {
    margin-right: 4px;
}

.react-flow__node-annotation .annotation-arrow {
    position: absolute;
    font-size: 24px;
}

/* Toolbar Node */
.react-flow__node-toolbar {
    background-color: hsl(var(--card));
    border-radius: 16px;
    overflow: hidden;
}

.react-flow__node-toolbar button {
    cursor: pointer;
    background: inherit;
    border: none;
    padding: 5px 7px;
    margin: 3px;
    border-radius: 50%;
    box-shadow: var(--xy-node-boxshadow-default);
}

.react-flow__node-toolbar button:hover {
    background: hsl(var(--muted));
}

/* Resizer Node */
.resizer-node__handles {
    display: flex;
    position: absolute;
    bottom: 0;
    width: 100%;
    justify-content: space-evenly;
    left: 0;
}

.resizer-node__handle {
    position: relative;
    left: 0;
    transform: none;
}

/* Button Edge */
.button-edge__label {
    position: absolute;
    pointer-events: all;
    transform-origin: center;
}

.button-edge__button {
    width: 30px;
    height: 30px;
    border: 2px solid hsl(var(--border));
    color: hsl(var(--foreground));
    background-color: hsl(var(--background));
    cursor: pointer;
    border-radius: 50%;
    font-size: 12px;
    padding-top: 0px;
}

.button-edge__button:hover {
    background-color: hsl(var(--muted));
    color: hsl(var(--foreground));
}

.react-flow__edge-textbg {
    fill: hsl(var(--background));
}

/* Custom Handles */
.react-flow__handle.custom-handle {
    background-color: var(--xy-handle-border-color-default);
    border-radius: 1px;
    width: 8px;
    height: 4px;
    border: none;
    min-width: 2px;
    min-height: 2px;
}

.react-flow__handle.custom-handle:hover,
.react-flow__handle.custom-handle.connectionindicator:focus,
.react-flow__handle.custom-handle.connectingfrom,
.react-flow__handle.custom-handle.connectingto {
    background-color: var(--xy-theme-edge-hover);
}

.react-flow__handle-bottom.custom-handle {
    bottom: -5px;
    transform: none;
}

.react-flow__handle-top.custom-handle {
    top: -5px;
    transform: none;
}

.react-flow__handle-left.custom-handle {
    height: 8px;
    width: 4px;
    left: -3px;
}

/* Minimap */
.react-flow__minimap .group {
    fill-opacity: 0.4;
}

.react-flow__minimap .resizer,
.react-flow__minimap .tools,
.react-flow__minimap .circle,
.react-flow__minimap .textinput {
    fill: hsl(var(--primary) / 0.7);
}

.react-flow__minimap .circle {
    rx: 100%;
    ry: 100%;
}

.react-flow__minimap .annotation {
    display: none;
}